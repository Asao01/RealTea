rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ═══════════════════════════════════════════════════════════════════
    // EVENTS COLLECTION - Public Read, Verified AI Writes Only
    // ═══════════════════════════════════════════════════════════════════
    match /events/{eventId} {
      // ✅ ALLOW: Anyone can read events (public timeline)
      allow read: if true;
      
      // ✅ ALLOW: Create new events if verified by AI with minimum credibility
      allow create: if isValidEventWrite();
      
      // ❌ DENY: Updates to existing events (prevent tampering)
      allow update: if false;
      
      // ❌ DENY: Deleting events (preserve history)
      allow delete: if false;
      
      // Validation function for event writes
      function isValidEventWrite() {
        let data = request.resource.data;
        
        return (
          // Must be verified by AI
          data.verifiedByAI == true &&
          
          // Minimum credibility score
          data.credibilityScore >= 60 &&  // 60 out of 100
          
          // Must have required fields
          data.title is string &&
          data.summary is string &&
          data.date is string &&
          data.sources is list &&
          
          // Must be added by auto system
          data.addedBy == 'auto' &&
          
          // Must have timestamps
          data.createdAt is timestamp &&
          data.updatedAt is timestamp
        );
      }
    }
    
    // ═══════════════════════════════════════════════════════════════════
    // ADMIN COLLECTION - Admin-Only Access
    // ═══════════════════════════════════════════════════════════════════
    match /admin/{document=**} {
      // Replace YOUR_FIREBASE_UID with your actual Firebase user UID
      // Get your UID from: Firebase Console > Authentication > Users
      allow read, write: if isAdmin();
      
      function isAdmin() {
        // Option 1: Specific user UID (replace with yours)
        return request.auth != null && 
               request.auth.uid == 'YOUR_FIREBASE_UID';
        
        // Option 2: Custom claims (if you set up admin role)
        // return request.auth != null && 
        //        request.auth.token.admin == true;
      }
    }
    
    // ═══════════════════════════════════════════════════════════════════
    // USER STATS - Users can read their own, auto system can write
    // ═══════════════════════════════════════════════════════════════════
    match /userStats/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
      allow create: if true; // Allow creating user stats
    }
    
    // ═══════════════════════════════════════════════════════════════════
    // HEALTH CHECK - Public read for monitoring
    // ═══════════════════════════════════════════════════════════════════
    match /healthcheck/{document=**} {
      allow read: if true;
      allow write: if true; // Allow health check writes
    }
    
    // ═══════════════════════════════════════════════════════════════════
    // DENY ALL OTHER COLLECTIONS
    // ═══════════════════════════════════════════════════════════════════
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
